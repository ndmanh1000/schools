"use client";
import Link from "next/link";
import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import SectionTitle from "../Common/SectionTitle";
import { CommonModal, useModal } from "../Modal/CommonModal";
import { submitToGoogleSheetsAPI, FormData as GoogleSheetsFormData } from "../../lib/googleSheets";

const Video = () => {
  const { isOpen: isRegisterModalOpen, openModal: openRegisterModal, closeModal: closeRegisterModal } = useModal();

  const handleRegisterClick = () => {
    console.log("Register button clicked!");
    openRegisterModal();
  };
  const [formData, setFormData] = useState({
    name: "",
    position: "",
    email: "",
    phone: "",
    organization: "",
    message: "",
  });

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async () => {
    try {
      // Validate required fields
      if (!formData.name || !formData.email || !formData.phone) {
        alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc (H·ªç t√™n, Email, S·ªë ƒëi·ªán tho·∫°i)");
        return;
      }

      // Prepare data for Google Sheets
      const googleSheetsData: GoogleSheetsFormData = {
        name: formData.name,
        position: formData.position,
        email: formData.email,
        phone: formData.phone,
        organization: formData.organization,
        message: formData.message,
        timestamp: new Date().toISOString(),
        source: "register"
      };

      // Submit to Google Sheets
      const success = await submitToGoogleSheetsAPI(googleSheetsData);

      if (success) {
        alert("C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i s·ªõm nh·∫•t.");
        // Reset form
        setFormData({
          name: "",
          position: "",
          email: "",
          phone: "",
          organization: "",
          message: "",
        });
        closeRegisterModal();
      } else {
        alert("C√≥ l·ªói x·∫£y ra khi g·ª≠i th√¥ng tin. Vui l√≤ng th·ª≠ l·∫°i sau.");
      }
    } catch (error) {
      console.error("Error submitting form:", error);
      alert("C√≥ l·ªói x·∫£y ra khi g·ª≠i th√¥ng tin. Vui l√≤ng th·ª≠ l·∫°i sau.");
    }
  };

  const registerModalContent = (
    <div className="space-y-4">
      <div className="text-center">
        <h3 className="mb-2 text-lg font-semibold text-gray-900 dark:text-white">
          üöÄ ƒêƒÉng k√Ω tr·∫£i nghi·ªám mi·ªÖn ph√≠
        </h3>
        <p className="text-sm text-gray-600 dark:text-gray-300">
          ƒêi·ªÅn th√¥ng tin ƒë·ªÉ nh·∫≠n t∆∞ v·∫•n v√† demo mi·ªÖn ph√≠
        </p>
      </div>

      <form className="space-y-4" onSubmit={(e) => { e.preventDefault(); handleSubmit(); }}>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
          {/* H·ªç v√† t√™n */}
          <div>
            <label className="mb-2 block text-sm font-medium text-dark dark:text-white">
              H·ªç v√† t√™n
            </label>
            <input
              type="text"
              name="name"
              value={formData.name}
              onChange={handleInputChange}
              placeholder="Nh·∫≠p t√™n c·ªßa b·∫°n"
              className="w-full rounded-sm border border-stroke bg-[#f8f8f8] px-4 py-2 text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
            />
          </div>

          {/* Ch·ª©c v·ª• */}
          <div>
            <label className="mb-2 block text-sm font-medium text-dark dark:text-white">
              Ch·ª©c v·ª•
            </label>
            <select
              name="position"
              value={formData.position}
              onChange={handleInputChange}
              className="w-full rounded-sm border border-stroke bg-[#f8f8f8] px-4 py-2 text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
            >
              <option value="" disabled>
                -- Ch·ªçn ch·ª©c v·ª• --
              </option>
              <option value="hieutruong">Hi·ªáu tr∆∞·ªüng</option>
              <option value="pho-hieutruong">Ph√≥ hi·ªáu tr∆∞·ªüng</option>
              <option value="giaovien">Gi√°o vi√™n</option>
              <option value="nhanvien">Nh√¢n vi√™n</option>
              <option value="khac">Kh√°c</option>
            </select>
          </div>

          {/* Email */}
          <div>
            <label className="mb-2 block text-sm font-medium text-dark dark:text-white">
              Email
            </label>
            <input
              type="email"
              name="email"
              value={formData.email}
              onChange={handleInputChange}
              placeholder="Nh·∫≠p email c·ªßa b·∫°n"
              className="w-full rounded-sm border border-stroke bg-[#f8f8f8] px-4 py-2 text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
            />
          </div>

          {/* S·ªë ƒëi·ªán tho·∫°i */}
          <div>
            <label className="mb-2 block text-sm font-medium text-dark dark:text-white">
              S·ªë ƒëi·ªán tho·∫°i
            </label>
            <input
              type="tel"
              name="phone"
              value={formData.phone}
              onChange={handleInputChange}
              placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
              className="w-full rounded-sm border border-stroke bg-[#f8f8f8] px-4 py-2 text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
            />
          </div>
        </div>

        {/* ƒê∆°n v·ªã c√¥ng t√°c */}
        <div>
          <label className="mb-2 block text-sm font-medium text-dark dark:text-white">
            ƒê∆°n v·ªã c√¥ng t√°c
          </label>
          <select
            name="organization"
            value={formData.organization}
            onChange={handleInputChange}
            className="w-full rounded-sm border border-stroke bg-[#f8f8f8] px-4 py-2 text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          >
            <option value="" disabled>
              -- Ch·ªçn ƒë∆°n v·ªã --
            </option>
            <option value="tieu-hoc">Tr∆∞·ªùng Ti·ªÉu h·ªçc</option>
            <option value="thcs">Tr∆∞·ªùng THCS</option>
            <option value="thpt">Tr∆∞·ªùng THPT</option>
            <option value="trung-tam">Trung t√¢m Gi√°o d·ª•c</option>
            <option value="khac">Kh√°c</option>
          </select>
        </div>

        {/* L·ªùi nh·∫Øn */}
        <div>
          <label className="mb-2 block text-sm font-medium text-dark dark:text-white">
            L·ªùi nh·∫Øn
          </label>
          <textarea
            name="message"
            value={formData.message}
            onChange={handleInputChange}
            rows={3}
            placeholder="Nh·∫≠p l·ªùi nh·∫Øn c·ªßa b·∫°n"
            className="w-full resize-none rounded-sm border border-stroke bg-[#f8f8f8] px-4 py-2 text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          />
        </div>
      </form>

      <div className="rounded-lg bg-green-50 p-3 dark:bg-green-900/20">
        <p className="text-xs text-green-800 dark:text-green-200">
          ‚úÖ <strong>Cam k·∫øt:</strong> Th√¥ng tin c·ªßa b·∫°n ƒë∆∞·ª£c b·∫£o m·∫≠t tuy·ªát ƒë·ªëi v√† ch·ªâ s·ª≠ d·ª•ng ƒë·ªÉ t∆∞ v·∫•n d·ªãch v·ª•.
        </p>
      </div>
    </div>
  );

  const reasons = [
    {
      title: "T√πy bi·∫øn cho tr∆∞·ªùng h·ªçc",
      desc: "Ph√°t tri·ªÉn t·ª´ Blue Rise, DSchool ƒë∆∞·ª£c t·ªëi ∆∞u ƒë·ªÉ qu·∫£n l√Ω h·ªì s∆°, l·ªõp h·ªçc, b√°o c√°o ƒë√∫ng chu·∫©n B·ªô/S·ªü.",
    },
    {
      title: "K·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu ng√†nh",
      desc: "T√≠ch h·ª£p tr·ª±c ti·∫øp v·ªõi c∆° s·ªü d·ªØ li·ªáu B·ªô/S·ªü Gi√°o d·ª•c, ƒë·ªìng b·ªô b√°o c√°o nhanh v√† ch√≠nh x√°c.",
    },
    {
      title: "Qu·∫£n l√Ω t·∫≠p trung",
      desc: "V·∫≠n h√†nh to√†n b·ªô tr∆∞·ªùng h·ªçc tr√™n m·ªôt n·ªÅn t·∫£ng duy nh·∫•t, gi·∫£m gi·∫•y t·ªù, tƒÉng hi·ªáu qu·∫£.",
    },
    {
      title: "H·ªó tr·ª£ d·∫°y & h·ªçc s·ªë",
      desc: "LMS t√≠ch h·ª£p cho ph√©p tinh gi·∫£n c√¥ng t√°c gi·∫£ng d·∫°y, t·ªï ch·ª©c thi tr·ª±c tuy·∫øn; ph·ª• huynh theo d√µi ti·∫øn ƒë·ªô v√† h·ªçc ph√≠ minh b·∫°ch.",
    },
    {
      title: "Tri·ªÉn khai nhanh ‚Äì H·ªó tr·ª£ 24/7",
      desc: "ƒê·ªôi ng≈© am hi·ªÉu c√¥ng ngh·ªá v√† gi√°o d·ª•c. T√≠ch h·ª£p AI tƒÉng t·ªëc s·ªë h√≥a v∆∞·ª£t tr·ªôi, h·ªó tr·ª£ k·ªπ thu·∫≠t li√™n t·ª•c, ƒë·∫£m b·∫£o nh√† tr∆∞·ªùng v·∫≠n h√†nh tr∆°n tru.",
    },
  ];

  const [selectedIndex, setSelectedIndex] = useState(0);
  const selectedReason = reasons[selectedIndex];

  return (
    <section className="relative z-50 py-16 md:py-20 lg:py-28 overflow-hidden">
      <div className="container">
        {/* Section Title with enhanced animation */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, ease: "easeOut" }}
          viewport={{ once: true }}
        >
          <SectionTitle
            title="5 l√Ω do n√™n ch·ªçn DSchool"
            paragraph="DSchool l√† gi·∫£i ph√°p qu·∫£n l√Ω tr∆∞·ªùng h·ªçc to√†n di·ªán, gi√∫p b·∫°n ti·∫øt ki·ªám th·ªùi gian, n√¢ng cao hi·ªáu qu·∫£ v√† t·ªëi ∆∞u h√≥a quy tr√¨nh v·∫≠n h√†nh."
            center
            mb="60px"
          />
        </motion.div>

        {/* Enhanced Tabs with staggered animation */}
        <motion.div
          className="mb-12 flex flex-wrap justify-center gap-3 sm:gap-4"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          viewport={{ once: true }}
        >
          {reasons.map((reason, index) => (
            <motion.button
              key={index}
              onClick={() => setSelectedIndex(index)}
              className={`relative rounded-full border px-4 py-3 text-xs sm:text-sm font-medium transition-all duration-300 md:text-base md:px-6 transform hover:scale-105 active:scale-95 min-h-[48px] flex items-center justify-center text-center
                ${selectedIndex === index
                  ? "border-primary bg-primary text-white shadow-lg shadow-primary/25"
                  : "border-gray-300 bg-white text-gray-700 hover:border-primary hover:text-primary hover:shadow-md dark:bg-gray-800 dark:border-gray-600 dark:text-gray-300"
                }`}
              whileHover={{ y: -2 }}
              whileTap={{ scale: 0.95 }}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.4, delay: index * 0.1 }}
            >
              {selectedIndex === index && (
                <motion.div
                  className="absolute inset-0 rounded-full bg-gradient-to-r from-primary to-blue-600"
                  layoutId="activeTab"
                  transition={{ type: "spring", bounce: 0.2, duration: 0.6 }}
                />
              )}
              <span className="relative z-10">{reason.title}</span>
            </motion.button>
          ))}
        </motion.div>

        {/* Enhanced Animated Reason Display */}
        <motion.div
          className="mx-auto max-w-4xl"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
          viewport={{ once: true }}
        >
          <AnimatePresence mode="wait">
            <motion.div
              key={selectedIndex}
              initial={{ opacity: 0, y: 30, scale: 0.95 }}
              animate={{ opacity: 1, y: 0, scale: 1 }}
              exit={{ opacity: 0, y: -30, scale: 0.95 }}
              transition={{
                duration: 0.5,
                ease: [0.4, 0, 0.2, 1],
                type: "spring",
                stiffness: 100
              }}
              className="relative rounded-2xl border border-gray-200 bg-white p-8 shadow-xl dark:bg-gray-800 dark:border-gray-700"
            >
              {/* Decorative elements */}
              <div className="absolute -top-2 -right-2 w-4 h-4 bg-primary rounded-full opacity-20"></div>
              <div className="absolute -bottom-2 -left-2 w-6 h-6 bg-primary rounded-full opacity-10"></div>

              <div className="relative">
                <motion.h4
                  className="mb-4 text-2xl font-bold text-primary"
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.4, delay: 0.2 }}
                >
                  {selectedReason.title}
                </motion.h4>
                <motion.p
                  className="text-gray-600 dark:text-gray-300 leading-relaxed text-lg"
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.4, delay: 0.3 }}
                >
                  {selectedReason.desc}
                </motion.p>
              </div>
            </motion.div>
          </AnimatePresence>
        </motion.div>

        {/* Enhanced CTA Button */}
        <motion.div
          className="flex flex-col items-center justify-center space-y-4 sm:flex-row sm:space-x-4 sm:space-y-0 md:mt-12 xl:mt-16"
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.6 }}
          viewport={{ once: true }}
        >
          <motion.button
            onClick={handleRegisterClick}
            className="group relative rounded-xl bg-gradient-to-r from-[#053cc0] to-[#1e40af] px-10 py-4 text-base font-semibold text-white shadow-lg shadow-blue-500/25 transition-all duration-300 hover:shadow-xl hover:shadow-blue-500/40 hover:scale-105 active:scale-95"
            whileHover={{ y: -2 }}
            whileTap={{ scale: 0.95 }}
          >
            <span className="relative z-10 flex items-center gap-2">
              <span>ƒêƒÉng k√Ω ngay</span>
              <motion.span
                className="text-lg"
                animate={{ x: [0, 5, 0] }}
                transition={{ duration: 1.5, repeat: Infinity }}
              >
                ‚Üí
              </motion.span>
            </span>
            <div className="absolute inset-0 rounded-xl bg-gradient-to-r from-[#1e40af] to-[#1e3a8a] opacity-0 transition-opacity duration-300 group-hover:opacity-100"></div>
          </motion.button>
        </motion.div>
      </div>

      {/* Enhanced Background Shape with animation */}
      <motion.div
        className="absolute bottom-0 left-0 right-0 z-[-1] h-full w-full bg-[url(/images/video/shape.svg)] bg-cover bg-center bg-no-repeat"
        initial={{ opacity: 0, scale: 1.1 }}
        whileInView={{ opacity: 1, scale: 1 }}
        transition={{ duration: 1, ease: "easeOut" }}
        viewport={{ once: true }}
      />

      {/* Floating decorative elements */}
      <motion.div
        className="absolute top-20 left-10 w-20 h-20 bg-primary/10 rounded-full blur-xl"
        animate={{
          y: [0, -20, 0],
          x: [0, 10, 0]
        }}
        transition={{
          duration: 6,
          repeat: Infinity,
          ease: "easeInOut"
        }}
      />
      <motion.div
        className="absolute bottom-20 right-10 w-16 h-16 bg-blue-500/10 rounded-full blur-xl"
        animate={{
          y: [0, 20, 0],
          x: [0, -10, 0]
        }}
        transition={{
          duration: 8,
          repeat: Infinity,
          ease: "easeInOut"
        }}
      />

      <div className="relative z-[9999999]" style={{ zIndex: 9999999 }}>
        <CommonModal
          isOpen={isRegisterModalOpen}
          onClose={closeRegisterModal}
          title="ƒêƒÉng k√Ω tr·∫£i nghi·ªám mi·ªÖn ph√≠"
          content={registerModalContent}
          primaryButtonText="G·ª≠i ƒëƒÉng k√Ω"
          secondaryButtonText="H·ªßy"
          onPrimaryClick={handleSubmit}
          size="lg"
        />
      </div>
    </section>
  );
};

export default Video;
